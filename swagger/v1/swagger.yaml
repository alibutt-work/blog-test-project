---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/posts/{post_id}/likes":
    post:
      summary: Creates a like
      tags:
      - Likes
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '302':
          description: like created
        '404':
          description: post not found
  "/posts/{post_id}/likes/{id}":
    delete:
      summary: Deletes a like
      tags:
      - Likes
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '302':
          description: like deleted
        '404':
          description: like not found
  "/posts":
    get:
      summary: Retrieves all posts
      tags:
      - Posts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string
                    created_at:
                      type: string
                      format: datetime
                    updated_at:
                      type: string
                      format: datetime
                  required:
                  - id
                  - title
                  - content
    post:
      summary: Creates a post
      tags:
      - Posts
      parameters: []
      responses:
        '201':
          description: post created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
              - title
              - content
  "/posts/{id}":
    get:
      summary: Retrieves a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                  created_at:
                    type: string
                    format: datetime
                  updated_at:
                    type: string
                    format: datetime
                required:
                - id
                - title
                - content
        '404':
          description: post not found
    put:
      summary: Updates a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post updated
        '404':
          description: post not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
    delete:
      summary: Deletes a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: post deleted
        '404':
          description: post not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
